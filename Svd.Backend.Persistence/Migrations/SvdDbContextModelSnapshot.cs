// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Svd.Backend.Persistence;

#nullable disable

namespace Svd.Backend.Persistence.Migrations
{
    [DbContext(typeof(SvdDbContext))]
    partial class SvdDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Svd.Backend.Domain.Entities.AirportDetails", b =>
                {
                    b.Property<Guid>("AirportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Airport")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)");

                    b.HasKey("AirportId");

                    b.ToTable("Airports");

                    b.HasData(
                        new
                        {
                            AirportId = new Guid("13904aa6-9f47-4579-9c1b-fc5a0a1f3961"),
                            Airport = 1,
                            Code = "TLL"
                        },
                        new
                        {
                            AirportId = new Guid("0f9d2ea1-fd26-404a-9cdc-72eb09a9f191"),
                            Airport = 3,
                            Code = "RIX"
                        },
                        new
                        {
                            AirportId = new Guid("4641bcfd-a227-4227-ad4d-ebdd9c65d185"),
                            Airport = 2,
                            Code = "HEL"
                        });
                });

            modelBuilder.Entity("Svd.Backend.Domain.Entities.Bag", b =>
                {
                    b.Property<Guid>("BagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BagNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("ItemsCount")
                        .HasColumnType("float");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<Guid>("ShipmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.HasKey("BagId");

                    b.HasIndex("BagNumber")
                        .IsUnique();

                    b.HasIndex("ShipmentId");

                    b.ToTable("Bags");
                });

            modelBuilder.Entity("Svd.Backend.Domain.Entities.CountryDetails", b =>
                {
                    b.Property<Guid>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)");

                    b.Property<int>("Country")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)");

                    b.HasKey("CountryId");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            CountryId = new Guid("6deb7ba4-cba3-4b82-ab68-9456bfa8eaec"),
                            Code = "EE",
                            Country = 1,
                            Name = "Estonia"
                        },
                        new
                        {
                            CountryId = new Guid("ccf08179-22e9-4239-b02b-cc9042dc517f"),
                            Code = "LV",
                            Country = 3,
                            Name = "Latvia"
                        },
                        new
                        {
                            CountryId = new Guid("446f7076-0590-483c-9a9a-96c9e62a972a"),
                            Code = "FI",
                            Country = 2,
                            Name = "Finland"
                        });
                });

            modelBuilder.Entity("Svd.Backend.Domain.Entities.Parcel", b =>
                {
                    b.Property<Guid>("ParcelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BagId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ParcelNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("RecipientName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.HasKey("ParcelId");

                    b.HasIndex("CountryId");

                    b.HasIndex("ParcelNumber")
                        .IsUnique();

                    b.ToTable("Parcels");
                });

            modelBuilder.Entity("Svd.Backend.Domain.Entities.Shipment", b =>
                {
                    b.Property<Guid>("ShipmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AirportId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Finalized")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FlightDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FlightNumber")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("varchar(6)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShipmentNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.HasKey("ShipmentId");

                    b.HasIndex("AirportId");

                    b.HasIndex("ShipmentNumber")
                        .IsUnique();

                    b.ToTable("Shipments");
                });

            modelBuilder.Entity("Svd.Backend.Domain.Entities.Bag", b =>
                {
                    b.HasOne("Svd.Backend.Domain.Entities.Shipment", null)
                        .WithMany("Bags")
                        .HasForeignKey("ShipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Svd.Backend.Domain.Entities.Parcel", b =>
                {
                    b.HasOne("Svd.Backend.Domain.Entities.CountryDetails", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Svd.Backend.Domain.Entities.Shipment", b =>
                {
                    b.HasOne("Svd.Backend.Domain.Entities.AirportDetails", "Airport")
                        .WithMany()
                        .HasForeignKey("AirportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Airport");
                });

            modelBuilder.Entity("Svd.Backend.Domain.Entities.Shipment", b =>
                {
                    b.Navigation("Bags");
                });
#pragma warning restore 612, 618
        }
    }
}
